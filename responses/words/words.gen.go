// Package words provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package words

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Id defines model for id.
type Id = openapi_types.UUID

// Meaning defines model for meaning.
type Meaning = string

// MeaningList defines model for meaningList.
type MeaningList = []struct {
	Meaning Meaning `json:"meaning"`
}

// TagIdList defines model for tagIdList.
type TagIdList = []Id

// TagList defines model for tagList.
type TagList = []struct {
	Id Id `json:"id"`
}

// Word defines model for word.
type Word = string

// GetWordListResponse defines model for GetWordListResponse.
type GetWordListResponse struct {
	Words []struct {
		Id          Id          `json:"id"`
		MeaningList MeaningList `json:"meaningList"`
		TagList     TagList     `json:"tagList"`
		Word        Word        `json:"word"`
	} `json:"words"`
}

// GetWordResponse defines model for GetWordResponse.
type GetWordResponse struct {
	Id          Id          `json:"id"`
	MeaningList MeaningList `json:"meaningList"`
	TagList     TagList     `json:"tagList"`
	Word        Word        `json:"word"`
}

// NotFoundResponse defines model for NotFoundResponse.
type NotFoundResponse = map[string]interface{}

// RegisterWordResponse defines model for RegisterWordResponse.
type RegisterWordResponse struct {
	Id          Id          `json:"id"`
	MeaningList MeaningList `json:"meaningList"`
	TagList     TagList     `json:"tagList"`
	Word        Word        `json:"word"`
}

// RegisterWordRequest defines model for RegisterWordRequest.
type RegisterWordRequest struct {
	MeaningList MeaningList `json:"meaningList"`
	TagIdList   TagIdList   `json:"tagIdList"`
	Word        Word        `json:"word"`
}

// UpdateWordRequest defines model for UpdateWordRequest.
type UpdateWordRequest struct {
	MeaningList *MeaningList `json:"meaningList,omitempty"`
	TagIdList   *TagIdList   `json:"tagIdList,omitempty"`
	Word        *Word        `json:"word,omitempty"`
}

// RegisterWordJSONBody defines parameters for RegisterWord.
type RegisterWordJSONBody struct {
	MeaningList MeaningList `json:"meaningList"`
	TagIdList   TagIdList   `json:"tagIdList"`
	Word        Word        `json:"word"`
}

// UpdateWordJSONBody defines parameters for UpdateWord.
type UpdateWordJSONBody struct {
	MeaningList *MeaningList `json:"meaningList,omitempty"`
	TagIdList   *TagIdList   `json:"tagIdList,omitempty"`
	Word        *Word        `json:"word,omitempty"`
}

// RegisterWordJSONRequestBody defines body for RegisterWord for application/json ContentType.
type RegisterWordJSONRequestBody RegisterWordJSONBody

// UpdateWordJSONRequestBody defines body for UpdateWord for application/json ContentType.
type UpdateWordJSONRequestBody UpdateWordJSONBody
